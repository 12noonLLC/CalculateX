<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shared="clr-namespace:Shared"
>
	<!-- Editable header -->
	<Style TargetType="{x:Type shared:EditableTabHeaderControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type shared:EditableTabHeaderControl}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />		<!-- Header text & edit -->
							<ColumnDefinition Width="Auto" />	<!-- Close button -->
						</Grid.ColumnDefinitions>
						<Grid.Resources>
							<BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
						</Grid.Resources>

						<!-- Editable header -->
						<TextBox Grid.Column="0" x:Name="PART_EditArea"
							Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnSourceUpdated=True}"
							Visibility="Collapsed"
                     shared:RoutedEventHelper.EnableRoutedHeaderChanged="True"
						/>
						<ContentPresenter Grid.Column="0" x:Name="ContentPresenter"
							Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
						/>

						<!-- Close button -->
						<!-- TODO: We could change this to bind to DelegateCommand object so we have CanExecute and Execute. (See Close and Add buttons.) -->
						<Button Grid.Column="1" Width="12" Height="12" BorderThickness="0.25" Margin="3,0,0,0" Padding="0,-4,0,-1"
							Foreground="DimGray" FontSize="12"
                     HorizontalAlignment="Center" VerticalAlignment="Center"
                     Content="x"
                     shared:RoutedEventHelper.EnableRoutedClick="True"
							Visibility="{Binding DataContext.CanCloseTab, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibility}, FallbackValue=Visible}"
						/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsInEditMode" Value="True">
							<Trigger.Setters>
								<Setter TargetName="PART_EditArea" Property="Visibility" Value="Visible" />
								<Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
							</Trigger.Setters>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>


<!-- Close and Add buttons -->
<!--
	https://docs.telerik.com/devtools/wpf/controls/radtabcontrol/howto/how-to-add-close-button-to-the-tab-headers-mvvm
-->
<!--
	<Style x:Key="CloseButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MouseOverBeginStoryboard">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse"
												Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0"
											Storyboard.TargetName="FocusEllipse"
											Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
											To="LightGray" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="MouseOverBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="IsPressedBeginStoryboard">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse"
												Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0" 
											Storyboard.TargetName="FocusEllipse" 
											Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
											To="DarkGray" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="IsPressedBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
					<Grid Width="14" Height="14" Background="Transparent">
						<Ellipse x:Name="FocusEllipse" Fill="#FFF13535" Visibility="Collapsed" />
						<ContentPresenter x:Name="ContentPresenter"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Content="{TemplateBinding Content}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="TabItemTemplate">
		<StackPanel VerticalAlignment="Center" Orientation="Horizontal">
			<TextBlock Text="{Binding Header}" /> OR SHOULD IT BE <ContentPresenter />
			<Button Margin="10,0,0,0"
					Command="{Binding RemoveItemCommand}"
					Style="{StaticResource CloseButton}"
					ToolTipService.ToolTip="Remove item">
				<Button.Content>
					<Path Data="M0,0 L6,6 M6, 0 L0,6" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" />
				</Button.Content>
			</Button>
			<Button
					Command="{Binding AddItemCommand}"
					Style="{StaticResource CloseButton}"
					ToolTipService.ToolTip="Add new item">
				<Button.Content>
					<Path Data="M4,0 L4,8 M0, 4 L8,4" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" />
				</Button.Content>
			</Button>
		</StackPanel>
	</DataTemplate>
	-->
	<!--
	<DataTemplate x:Key="ContentTemplate">
		<Grid />
	</DataTemplate>
	<Style TargetType="telerik:RadTabItem">
		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
	</Style>
	<telerik:RadTabControl x:Name="tabControl"
      Width="600" Height="300"
      ContentTemplate="{StaticResource ContentTemplate}"
      ItemTemplate="{StaticResource TabItemTemplate}"
      ItemsSource="{Binding Tabs}"
      OverflowMode="Wrap" />
-->
